name: Prepare Release
description: Update formula, tag commit, and create GitHub release

inputs:
  version:
    required: true
  repo:
    required: true
  token:
    required: true
  action_name:
    required: true

runs:
  using: "composite"
  steps:
    - run: |
        set -ouex pipefail

        FORMULA="Formula/$(basename "$REPO").rb"
        TARBALL_URL="https://github.com/$REPO/archive/refs/tags/$VERSION.tar.gz"
        COMMIT_MSG="github-actions: run $ACTION_NAME for $VERSION"

        # Ensure the tag doesn't exist
        if git ls-remote --tags origin | grep -q "refs/tags/$VERSION$"; then
          echo "Error: tag $VERSION already exists on origin"
          exit 1
        fi

        # Pull latest to avoid push conflicts
        git pull --rebase origin main

        # TEMP: use dummy sha so we can commit the formula first
        DUMMY_SHA="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

        # Step 1: Write formula with dummy SHA
        sed -i'' \
          -e "s|^  homepage \".*\"|  homepage \"https://github.com/$REPO\"|" \
          -e "s|^  url \".*\"|  url \"$TARBALL_URL\"|" \
          -e "s|^  sha256 \".*\"|  sha256 \"$DUMMY_SHA\"|" \
          -e "s|^  version \".*\"|  version \"${VERSION#v}\"|" \
          "$FORMULA"

        git config user.name "github-actions"
        git config user.email "github-actions@users.noreply.github.com"
        git add "$FORMULA"
        git commit -m "$COMMIT_MSG"

        # Step 2: Tag & push
        git tag "$VERSION"
        git push origin HEAD
        git push origin "$VERSION"

        # Step 3: Get correct SHA from the tagged tarball
        REAL_SHA=$(curl -sL "$TARBALL_URL" | shasum -a 256 | cut -d' ' -f1)

        # Step 4: Patch formula with real SHA
        sed -i'' "s|$DUMMY_SHA|$REAL_SHA|" "$FORMULA"
        git add "$FORMULA"
        git commit --amend -C HEAD

        # Step 5: Force push updated commit and tag
        git push --force origin HEAD
        git push --force origin "$VERSION"

        # Step 6: Create release
        gh release create "$VERSION" --generate-notes

      shell: bash
      env:
        VERSION: ${{ inputs.version }}
        REPO: ${{ inputs.repo }}
        ACTION_NAME: ${{ inputs.action_name }}
        GH_TOKEN: ${{ inputs.token }}
